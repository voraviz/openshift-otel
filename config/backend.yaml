apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  annotations:
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: 'https://gitlab.com/ocp-demo/backend_quarkus'
  labels:
    app.kubernetes.io/component: backend
    app.kubernetes.io/instance: backend
    app.kubernetes.io/name: backend
    app.kubernetes.io/part-of: App-X
    app.openshift.io/runtime: quarkus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "backend"
      version: "v1"
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: backend
        version: v1
      annotations:
        instrumentation.opentelemetry.io/inject-java: "true"
    spec:
      containers:
      - name: backend
        image: quay.io/voravitl/backend:latest
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "0.1"
            memory: 100Mi
          limits:
            cpu: "0.3"
            memory: 300Mi
        env:
          - name: APP_BACKEND
            value: https://httpbin.org/status/200
          - name: APP_VERSION
            value: v1
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-headless:4318 
          - name: OTEL_SERVICE_NAME
            value: backend
          - name: OTEL_PROPAGATORS
            value: tracecontext,b3
          - name: OTEL_TRACES_SAMPLER_ARG
            value: "drop=/q/health/ready;drop=/q/health/live;fallback=always_on"
        ports:
        - containerPort: 8080
        securityContext:
          seccompProfile: #"RuntimeDefault" or "Localhost"
            type: RuntimeDefault
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop: ["ALL"]
          readOnlyRootFilesystem: false
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 60  
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  labels:
    app: backend
spec:
  ports:
  - port: 8080
    name: http
    targetPort: 8080
  selector:
    app: backend
---
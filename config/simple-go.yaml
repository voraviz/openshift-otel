apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"simple-rest-dotnet"}]'
  labels:
    app.kubernetes.io/component: simple-go
    app.kubernetes.io/instance: simple-go
    app.kubernetes.io/name: simple-go
    app.kubernetes.io/part-of: App-X
    app.openshift.io/runtime: go
  name: simple-go
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: simple-go
      version: v1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        instrumentation.opentelemetry.io/inject-go: "true"
        instrumentation.opentelemetry.io/otel-go-auto-target-exe: /app/api
        openshift.io/required-scc: otel-go-instrumentation-scc
      labels:
        app: simple-go
        version: v1
    spec:
      serviceAccountName: go-lang-runner
      containers:
      - env:
        - name: BACKEND
          value: http://simple-rest-dotnet:8080/api
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://otel-collector-headless:4318
        - name: OTEL_SERVICE_NAME
          value: simple-go
        - name: OTEL_GO_AUTO_TARGET_EXE
          value: /app/api
        - name: OTEL_PROPAGATORS
          value: tracecontext,b3
        image: quay.io/voravitl/simple-rest-go:latest
        imagePullPolicy: Always
        name: simple-go
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 60Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: simple-go
  labels:
    app: simple-go
spec:
  ports:
  - port: 8080
    name: http
    targetPort: 8080
  selector:
    app: simple-go
---
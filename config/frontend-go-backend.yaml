apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  annotations:
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: 'https://gitlab.com/ocp-demo/frontend-js'
    app.openshift.io/connects-to: >-
      [{"apiVersion":"apps/v1","kind":"Deployment","name":"simple-go"}]
  labels:
    app.kubernetes.io/component: frontend
    app.kubernetes.io/instance: frontend
    app.kubernetes.io/name: frontend
    app.kubernetes.io/part-of: App-X
    app.openshift.io/runtime: nodejs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
      version: v1
  template:
    metadata:
      labels:
        app: frontend
        version: v1
      # annotations:
      #   instrumentation.opentelemetry.io/inject-nodejs: "true"
    spec:
      containers:
      - name: frontend
        image: quay.io/voravitl/frontend-js:latest
        imagePullPolicy: Always
        env:
          - name: BACKEND_URL
            value: http://simple-go:8080
          # - name: OTEL_EXPORTER_OTLP_ENDPOINT
          #   value: http://otel-collector-headless:4318  
          # - name: OTEL_SERVICE_NAME
          #   value: frontend
          # - name: OTEL_PROPAGATORS
          #   value: tracecontext,b3
        resources:
          requests:
            cpu: "0.1"
            memory: 60Mi
          limits:
            cpu: "0.2"
            memory: 300Mi
        ports:
        - containerPort: 8080
        securityContext:
          seccompProfile: #"RuntimeDefault" or "Localhost"
            type: RuntimeDefault
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop: ["ALL"]
          readOnlyRootFilesystem: true
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  ports:
  - port: 8080
    name: http
    targetPort: 8080
  selector:
    app: frontend
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: frontend
spec:
  port:
    targetPort: http
  tls:
    termination: edge
  to:
    kind: Service
    name: frontend
    weight: 100
  wildcardPolicy: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"backend"}]'
  labels:
    app.kubernetes.io/component: simple-go
    app.kubernetes.io/instance: simple-go
    app.kubernetes.io/name: simple-go
    app.kubernetes.io/part-of: App-X
    app.openshift.io/runtime: go
  name: simple-go
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: simple-go
      version: v1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        instrumentation.opentelemetry.io/inject-go: "true"
        instrumentation.opentelemetry.io/otel-go-auto-target-exe: /app/api
        openshift.io/required-scc: otel-go-instrumentation-scc
      labels:
        app: simple-go
        version: v1
    spec:
      containers:
      - env:
        - name: BACKEND
          value: http://backend:8080
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://otel-collector-headless:4318
        - name: OTEL_SERVICE_NAME
          value: simple-go
        - name: OTEL_GO_AUTO_TARGET_EXE
          value: /app/api
        - name: OTEL_PROPAGATORS
          value: tracecontext,b3
        image: quay.io/voravitl/simple-rest-go:latest
        imagePullPolicy: Always
        name: simple-go
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 60Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: simple-go
  labels:
    app: simple-go
spec:
  ports:
  - port: 8080
    name: http
    targetPort: 8080
  selector:
    app: simple-go
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  annotations:
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: 'https://gitlab.com/ocp-demo/backend_quarkus'
  labels:
    app.kubernetes.io/component: backend
    app.kubernetes.io/instance: backend
    app.kubernetes.io/name: backend
    app.kubernetes.io/part-of: App-X
    app.openshift.io/runtime: quarkus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "backend"
      version: "v1"
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: backend
        version: v1
      annotations:
        instrumentation.opentelemetry.io/inject-java: "true"
    spec:
      containers:
      - name: backend
        image: quay.io/voravitl/backend:latest
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "0.1"
            memory: 100Mi
          limits:
            cpu: "0.3"
            memory: 300Mi
        env:
          - name: APP_BACKEND
            value: https://localhost:8080/version
          - name: APP_VERSION
            value: v1
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-headless:4318 
          - name: OTEL_SERVICE_NAME
            value: backend
          - name: OTEL_PROPAGATORS
            value: tracecontext,b3
        ports:
        - containerPort: 8080
        securityContext:
          seccompProfile: #"RuntimeDefault" or "Localhost"
            type: RuntimeDefault
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop: ["ALL"]
          readOnlyRootFilesystem: false
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 60  
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  labels:
    app: backend
spec:
  ports:
  - port: 8080
    name: http
    targetPort: 8080
  selector:
    app: backend
---

